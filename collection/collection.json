{
	"info": {
		"_postman_id": "6ede7244-13ea-46cd-bd69-4ec3f10669d5",
		"name": "dmoney_users_b12",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37996569"
	},
	"item": [
		{
			"name": "User Login",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json();\r",
									"let token = jsonData.token;\r",
									"pm.collectionVariables.set (\"token\",token)\r",
									"pm.environment.set(\"token\",token)\r",
									"\r",
									"pm.test(\"Check if login is successful\",()=>{\r",
									"    pm.expect(jsonData.message).includes(\"Login successful\")\r",
									"})\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Check if login is successful\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Login successful\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"admin@roadtocareer.net\",\r\n    \"password\":\"1234\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Unsuccessful Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Unsuccessful login with wrong inputs\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).includes(\"Password incorrect\");\r",
									"});\r",
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"admin@roadtocareer.net\",\r\n    \"password\":\"12634\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User List",
			"item": [
				{
					"name": "User List",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/list",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"list"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Sign Up",
			"item": [
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json();\r",
									"let userId = jsonData.user.id;\r",
									"let userEmail = jsonData.user.email;\r",
									"\r",
									"pm.collectionVariables.set (\"userId\", userId)\r",
									"pm.collectionVariables.set (\"userEmail\", userEmail.toLowerCase())\r",
									"\r",
									"pm.environment.set (\"userId\", userId)\r",
									"pm.environment.set (\"userEmail\", userEmail.toLowerCase())\r",
									"\r",
									"pm.test(\"New User is Created\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"User created\");\r",
									"});\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									" let randomId =_.random(100000,999999)\r",
									" let prefix = \"01301\";\r",
									" let phoneNumber = prefix+randomId;\r",
									" \r",
									"pm.collectionVariables.set (\"phoneNumber\", phoneNumber)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerkey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"B12 U {{$randomFirstName}}\",\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"password\":\"1234\",\r\n    \"phone_number\":\"{{phoneNumber}}\",\r\n    \"nid\":\"123457789\",\r\n    \"role\":\"Customer\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Duplicate User Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"\r",
									"pm.test(\"Check if same user can't sign up multiple times\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"User already exists\");\r",
									"});\r",
									"pm.test(\"Status code is 208\", function () {\r",
									"    pm.response.to.have.status(208);\r",
									"});\r",
									"pm.test(\"Check if same user can't sign up multiple times\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).includes(\"User already exists\")\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									" let randomId =_.random(100000,999999)\r",
									" let prefix = \"01301\";\r",
									" let phoneNumber = prefix+randomId;\r",
									" \r",
									"pm.collectionVariables.set (\"phoneNumber\", phoneNumber)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerkey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"name\": \"B12 U Steve\",\r\n        \"email\": \"Fredrick35@gmail.com\",\r\n        \"password\": \"1234\",\r\n        \"phone_number\": \"01301587329\",\r\n        \"nid\": \"123457789\",\r\n        \"role\": \"Customer\"\r\n} ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"create"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Search User",
			"item": [
				{
					"name": "Check if wrong token is working",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User can't found with wrong token\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Token expired!\");\r",
									"});\r",
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "be  arer {{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerkey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/search/id/23",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"search",
								"id",
								"23"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check if user is found\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"User found\");\r",
									"});\r",
									"pm.test(\"Check if user is found\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).includes(\"User found\")\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerkey}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/search/id/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"search",
								"id",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search user by wrong id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User can't be found with wrong id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).includes(\"User not found\")\r",
									"});\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"User can't be found with wrong id\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"User not found\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerkey}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/search/id/23",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"search",
								"id",
								"23"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Update User",
			"item": [
				{
					"name": "Update User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerkey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"name\": \"B12 U Eva\",\r\n        \"email\": \"Lilliana@hotmail.com\",\r\n        \"password\": \"1234\",\r\n        \"phone_number\": \"01301498305\",\r\n        \"nid\": \"123457789\",\r\n        \"role\": \"Customer\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/update/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"update",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User by Patch",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerkey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n      \r\n        \"role\": \"Agent\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/update/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"update",
								"{{userId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Delete User",
			"item": [
				{
					"name": "User Delete",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "bearer {{token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerkey}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/delete/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"delete",
								"{{userId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZGVudGlmaWVyIjoiYWRtaW5Acm9hZHRvY2FyZWVyLm5ldCIsInJvbGUiOiJBZG1pbiIsImlhdCI6MTc0NDg2OTczNiwiZXhwIjoxNzQ0ODczMzM2fQ.RiQkTBOCuDNhnlhbBY9vRgJPSMerNDBGodexJNog9ms"
		},
		{
			"key": "baseUrl",
			"value": "http://dmoney.roadtocareer.net",
			"type": "string"
		},
		{
			"key": "partnerkey",
			"value": "ROADTOSDET",
			"type": "string"
		},
		{
			"key": "phoneNumber",
			"value": "01301733334"
		},
		{
			"key": "userId",
			"value": 75561
		},
		{
			"key": "userEmail",
			"value": "allen46@yahoo.com"
		}
	]
}